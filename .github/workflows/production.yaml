name: Production

on:
  push:
    branches:
      - main

jobs:
  create-release:
    name: create release
    if: >-
      contains(github.event.head_commit.message, 'feature') &&
      contains(github.event.head_commit.message, 'fix') &&
      contains(github.event.head_commit.message, 'release')

    runs-on: ubuntu-latest
    outputs:
      release_version: ${{ steps.semantic-release.outputs.new_release_version }}
    steps:
      - uses: actions/checkout@v4

      - name: Set GITHUB config
        run: |
          git config --local user.name "GitHub Action"
          git config --local user.email "action@github.com"

      - name: 📝 Semantic release
        id: semantic-release
        uses: cycjimmy/semantic-release-action@v4
        with:
          extra_plugins: |
            @semantic-release/exec
            @semantic-release/git
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-prod:
    name: Build
    if: >-
      contains(github.event.head_commit.message, 'feature') &&
      contains(github.event.head_commit.message, 'fix') &&
      contains(github.event.head_commit.message, 'release')
    needs: [create-release]
    uses: ./.github/workflows/build-prod.yaml
    with:
      version: ${{needs.create-release.outputs.release_version}}
    secrets:
      KEY_PROPERTIES: ${{secrets.KEY_PROPERTIES}}
      FIREBASE_OPTIONS: ${{secrets.FIREBASE_OPTIONS}}
      GOOGLE_SERVICES: ${{secrets.GOOGLE_SERVICES}}

  upload-to-appstore:
    if: >-
      contains(github.event.head_commit.message, 'feature') &&
      contains(github.event.head_commit.message, 'fix') &&
      contains(github.event.head_commit.message, 'release')
    name: Deploy
    runs-on: ubuntu-latest
    needs: [create-release, build-prod]
    steps:
      - uses: actions/checkout@v4

      - name: Setup ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.0"
          working-directory: "android"
          bundler-cache: true

      - name: Play store credentials
        run: echo "${{vars.PLAY_STORE_UPLOAD_KEY}}" | base64 -d > android/fastlane/play-store-credentials.json

      - name: Download artifact
        id: download-artifact
        uses: actions/download-artifact@v4
        with:
          name: app-${{needs.create-release.outputs.release_version}}.aab
          path: build/app/outputs/bundle/release

      - name: Deploy to playstore
        uses: maierj/fastlane-action@v3.0.0
        env:
          AAB_PATH: "../build/app/outputs/bundle/release/app-${{needs.create-release.outputs.release_version}}.aab"
        with:
          lane: "uploadToPlayStore"
          subdirectory: "android"

  github_release:
    name: Create GitHub Release
    if: >-
      contains(github.event.head_commit.message, 'feature') &&
      contains(github.event.head_commit.message, 'fix') &&
      contains(github.event.head_commit.message, 'release')
    needs: [create-release]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{needs.create-release.outputs.release_version}}

      - name: Set up Git
        run: |
          git config user.name "Robot"
          git config user.email "robot@alphasow.dev"

      - name: Create GitHub Release
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh release create ${{ needs.create-release.outputs.release_version }} --title ${{ needs.create-release.outputs.release_version }} --generate-notes
